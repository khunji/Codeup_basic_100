#미로 상자의 구조가 0(갈 수 있는 곳), 1(벽 또는 장애물)로 주어지고,
#먹이가 2로 주어질 때, 성실한 개미의 이동 경로를 예상해보자.

#단, 맨 아래의 가장 오른쪽에 도착한 경우, 더 이상 움직일 수 없는 경우, 먹이를 찾은 경우에는
#더이상 이동하지 않고 그 곳에 머무른다고 가정한다.

#미로 상자의 테두리는 모두 벽으로 되어 있으며,
#개미집은 반드시 (2, 2)에 존재하기 때문에 개미는 (2, 2)에서 출발한다.
#10**10크기의 미로 상자의 구조와 먹이의 위치가 입력된다.
#성실한 개미가 이동한 경로를 9로 표시해 출력한다.

matrix = [] #빈 리스트 생성

for i in range(10): #세로줄 반복  
    matrix.append(list(map(int,input().split())))       #가로줄 입력


#개미의 시작 위치 (2,2)
x=1 #시작 위치 인덱스화
y=1 #시작 위치 인덱스화

#개미의 먹이가 있는 좌표의 값:9

while True:

    if matrix[x][y] == 2:
        matrix[x][y] = 9
        break

    matrix[x][y]=9  #현재 위치

    if matrix[x][y+1]!=1:   #오른쪽으로 이동했는데 계속 갈 수 있음.
        y+=1                #안 막히면 계속 가자

    elif matrix[x+1][y]!=1:   #아래로 이동하는데 계속 갈 수 있음.
        x+=1                    # 안 막히면 계속 가자.
    else:
        break

    

for i in range(10):
    for j in range(10):
        print(matrix[i][j], end=' ')
    print()
